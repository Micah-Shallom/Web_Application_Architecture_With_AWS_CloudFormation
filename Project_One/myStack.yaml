Description: >
  Micah Shallom Bawa
  Web Application Architecture Using AWS CloudFormation

#Constructing parameter templates
Parameters:
  ProjectName:
    Description: The name tags of all the projects infrastructures
    Type: String
  VpcCIDR:
    Description: The CIDR IP address range for our VPC
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1CIDR:
    Description: The Ip address range of all servers in public subnet 1
    Type: String
    Default: 10.0.0.0/24
  PublicSubnet2CIDR:
    Description: The Ip address range of all servers in public subnet 2
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnet1CIDR:
    Description: The Ip address range of all servers in private subnet 1
    Type: String
    Default: 10.0.2.0/24
  PrivateSubnet2CIDR:
    Description: The Ip address range of all servers in private subnet 2
    Type: String
    Default: 10.0.3.0/24


Resources:
#############################################################################################################
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName} VPC
#############################################################################################################
#Creating Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} InternetGateway
  VPCInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
###########################################################################################################
#Creating Public and Private Subnet
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName} Public Subnet (AZ1)
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName} Public Subnet (AZ1)
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet1CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0 , !GetAZs '']
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName} Private Subnet (AZ1)
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet2CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1 , !GetAZs '']
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName} Private Subnet (AZ2)
##############################################################################################################
#Creating Elastic IP addresses for the public NAT Gateways
  PublicNatEIP1:
    Type: AWS::EC2::EIP
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      Domain: vpc
  PublicNatEIP2:
    Type: AWS::EC2::EIP
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      Domain: vpc
############################################################################################################
#Creating NAT Gateways to be housed in the Public Subnets
  PublicNATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: 
        Fn::GetAtt:
        - PublicNatEIP1
        - AllocationId
      SubnetId:
          Ref: PublicSubnet1
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName} Public NAT 1
  PublicNATGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId:
          Fn::GetAtt:
          - PublicNatEIP2
          - AllocationId
        SubnetId:
          Ref: PublicSubnet2
        Tags:
        - Key: Name
          Value: !Sub ${ProjectName} Public NAT 2
########################################################################################################
#Creating Routing Roles to control the flow of access traffics
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} Public RT
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} Private RT 1
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} Private RT 2
  PrivateRoute1:
    Type: AWS::EC2::Route
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref PublicNATGateway1
  PrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref PublicNATGateway2
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2
################################################################################################################
#Sending Vital Information Globally as Output

Outputs:
  VPC:
    Description: The ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${ProjectName}-VPCID
  VPCPublicRouteTable:
    Description: Public Route Table 
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${ProjectName}-Pub-RT
  VPCPrivateRouteTable1:
    Description: Private Route Table 1
    Value: !Ref PrivateRouteTable1
    Export:
      Name: !Sub ${ProjectName}-PRIV-RT-1
  VPCPrivateRouteTable2:
    Description: Private Route Table 2
    Value: !Ref PrivateRouteTable2
    Export:
      Name: !Sub ${ProjectName}-PRIV-RT-2
  PublicSubnets:
    Description: All Public Subnets
    Value: !Join [',' , [!Ref PublicSubnet1 , !Ref PublicSubnet2]]
    Export:
      Name: !Sub ${ProjectName}-PUB-SUBNETS
  PublicSubnet1:
    Description: A reference to the public subnet in (AZ1)
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${ProjectName}-PUB1-SUBNET
  PublicSubnet2:
    Description: A reference to the public subnet in (AZ2)
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${ProjectName}-PUB2-SUBNET

  PrivateSubnets:
    Description: All Private Subnets
    Value: !Join [',' , [!Ref PrivateSubnet1 , !Ref PrivateSubnet2]]
    Export:
      Name: !Sub "${ProjectName}-PRIV-SUBNETS"
  PrivateSubnet1:
    Description: A reference to the private subnet in (AZ1)
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${ProjectName}-PRIV1-SUBNET
  PrivateSubnet2:
    Description: A reference to the private subnet in (AZ2)
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${ProjectName}-PRIV2-SUBNET
  